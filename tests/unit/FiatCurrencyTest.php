<?php
/*
 * This file was generated by modelGen
 * VERSION: c58b306895e4c9c3d8ced1b38b3d780b
 * https://github.com/alexshadie/modelGen
 */

namespace alexshadie\currency;

use PHPUnit\Framework\TestCase;

class FiatCurrencyTest extends TestCase
{

    public function testCreate()
    {
        $m = new FiatCurrency(
            90,
            "74hpvvts3y0kkboo",
            "on8ycg8jkycwrv1h",
            32,
            92,
            "zpxdeajawr0xkple"
        );

        $this->assertEquals(90, $m->getId());
        $this->assertEquals("74hpvvts3y0kkboo", $m->getCode());
        $this->assertEquals("on8ycg8jkycwrv1h", $m->getName());
        $this->assertEquals(32, $m->getUnit());
        $this->assertEquals(92, $m->getCountryId());
        $this->assertEquals("zpxdeajawr0xkple", $m->getCountryName());

        $m = (new FiatCurrencyBuilder())
            ->setId(82)
            ->setCode("351a1xpwk8mbkfmq")
            ->setName("h30j0w7uk5anivbz")
            ->setUnit(47)
            ->setCountryId(29)
            ->setCountryName("u2tsp6evxjc6b374")
            ->create();

        $this->assertEquals(82, $m->getId());
        $this->assertEquals("351a1xpwk8mbkfmq", $m->getCode());
        $this->assertEquals("h30j0w7uk5anivbz", $m->getName());
        $this->assertEquals(47, $m->getUnit());
        $this->assertEquals(29, $m->getCountryId());
        $this->assertEquals("u2tsp6evxjc6b374", $m->getCountryName());

        $src = [];
        $src['id'] = 48;
        $src['code'] = "zqd6j3kdfqp4hgs7";
        $src['name'] = "ncuzoh4xgficq1zp";
        $src['unit'] = 7;
        $src['countryId'] = 14;
        $src['countryName'] = "njabi1veqv82sms5";
        $m = FiatCurrencyBuilder::fromArray($src)
            ->create();
        $this->assertEquals(48, $m->getId());
        $this->assertEquals("zqd6j3kdfqp4hgs7", $m->getCode());
        $this->assertEquals("ncuzoh4xgficq1zp", $m->getName());
        $this->assertEquals(7, $m->getUnit());
        $this->assertEquals(14, $m->getCountryId());
        $this->assertEquals("njabi1veqv82sms5", $m->getCountryName());

        $src = [];
        $src[0] = 82;
        $src[1] = "eca3vg1n8u8k0x9n";
        $src[2] = "hnozs4fvekysuwfy";
        $src[3] = 32;
        $src[4] = 89;
        $src[5] = "yr8lg27x91ue5ve5";
        $m = FiatCurrencyBuilder::fromArray($src)
            ->create();
        $this->assertEquals(82, $m->getId());
        $this->assertEquals("eca3vg1n8u8k0x9n", $m->getCode());
        $this->assertEquals("hnozs4fvekysuwfy", $m->getName());
        $this->assertEquals(32, $m->getUnit());
        $this->assertEquals(89, $m->getCountryId());
        $this->assertEquals("yr8lg27x91ue5ve5", $m->getCountryName());

        $src = [];
        $src['id'] = 92;
        $src['code'] = "m73y6nol03s7dk18";
        $src['name'] = "sxqp7fyya636uzvv";
        $src['unit'] = 13;
        $src['country_id'] = 63;
        $src['country_name'] = "7rfeazwlav2cedzg";
        $m = FiatCurrencyBuilder::fromArray($src)
            ->create();
        $this->assertEquals(92, $m->getId());
        $this->assertEquals("m73y6nol03s7dk18", $m->getCode());
        $this->assertEquals("sxqp7fyya636uzvv", $m->getName());
        $this->assertEquals(13, $m->getUnit());
        $this->assertEquals(63, $m->getCountryId());
        $this->assertEquals("7rfeazwlav2cedzg", $m->getCountryName());

        $m = FiatCurrency::build()
            ->setId(82)
            ->setCode("351a1xpwk8mbkfmq")
            ->setName("h30j0w7uk5anivbz")
            ->setUnit(47)
            ->setCountryId(29)
            ->setCountryName("u2tsp6evxjc6b374")
            ->create();
        $this->assertEquals(82, $m->getId());
        $this->assertEquals("351a1xpwk8mbkfmq", $m->getCode());
        $this->assertEquals("h30j0w7uk5anivbz", $m->getName());
        $this->assertEquals(47, $m->getUnit());
        $this->assertEquals(29, $m->getCountryId());
        $this->assertEquals("u2tsp6evxjc6b374", $m->getCountryName());

    }

    public function testCreateNulls()
    {
        $m = new FiatCurrency(
            24,
            "dr3oal8y0xu89ofd",
            "d7nmcovsrw7ky81r",
            34,
            null,
            "y9gfca0z0w46w8e7"
        );

        $this->assertEquals(24, $m->getId());
        $this->assertEquals("dr3oal8y0xu89ofd", $m->getCode());
        $this->assertEquals("d7nmcovsrw7ky81r", $m->getName());
        $this->assertEquals(34, $m->getUnit());
        $this->assertEquals(null, $m->getCountryId());
        $this->assertEquals("y9gfca0z0w46w8e7", $m->getCountryName());

        $m = (new FiatCurrencyBuilder())
            ->setId(91)
            ->setCode("vdoba5t5ov37jyn9")
            ->setName("flmbgl3kno5jxxxt")
            ->setUnit(66)
            ->setCountryId(null)
            ->setCountryName("i231a3uju70aqg0d")
            ->create();

        $this->assertEquals(91, $m->getId());
        $this->assertEquals("vdoba5t5ov37jyn9", $m->getCode());
        $this->assertEquals("flmbgl3kno5jxxxt", $m->getName());
        $this->assertEquals(66, $m->getUnit());
        $this->assertEquals(null, $m->getCountryId());
        $this->assertEquals("i231a3uju70aqg0d", $m->getCountryName());

        $src = [];
        $src['id'] = 30;
        $src['code'] = "a46x2vj4of6ssvg0";
        $src['name'] = "rg9jots8dhru7kaq";
        $src['unit'] = 56;
        $src['countryId'] = null;
        $src['countryName'] = "pvvkniqdt9ti86jl";
        $m = FiatCurrencyBuilder::fromArray($src)
            ->create();
        $this->assertEquals(30, $m->getId());
        $this->assertEquals("a46x2vj4of6ssvg0", $m->getCode());
        $this->assertEquals("rg9jots8dhru7kaq", $m->getName());
        $this->assertEquals(56, $m->getUnit());
        $this->assertEquals(null, $m->getCountryId());
        $this->assertEquals("pvvkniqdt9ti86jl", $m->getCountryName());

        $src = [];
        $src[0] = 73;
        $src[1] = "kuqs3a80yxuynp0a";
        $src[2] = "woqwzkapjdta1iae";
        $src[3] = 85;
        $src[4] = null;
        $src[5] = "9jlsvtfxfl4lbizu";
        $m = FiatCurrencyBuilder::fromArray($src)
            ->create();
        $this->assertEquals(73, $m->getId());
        $this->assertEquals("kuqs3a80yxuynp0a", $m->getCode());
        $this->assertEquals("woqwzkapjdta1iae", $m->getName());
        $this->assertEquals(85, $m->getUnit());
        $this->assertEquals(null, $m->getCountryId());
        $this->assertEquals("9jlsvtfxfl4lbizu", $m->getCountryName());

        $src = [];
        $src['id'] = 63;
        $src['code'] = "5epuw8h4gp6yyouz";
        $src['name'] = "lzgidd8sumd2hnyl";
        $src['unit'] = 29;
        $src['country_id'] = null;
        $src['country_name'] = "kmh96rbbrq0cgbe3";
        $m = FiatCurrencyBuilder::fromArray($src)
            ->create();
        $this->assertEquals(63, $m->getId());
        $this->assertEquals("5epuw8h4gp6yyouz", $m->getCode());
        $this->assertEquals("lzgidd8sumd2hnyl", $m->getName());
        $this->assertEquals(29, $m->getUnit());
        $this->assertEquals(null, $m->getCountryId());
        $this->assertEquals("kmh96rbbrq0cgbe3", $m->getCountryName());

        $m = FiatCurrency::build()
            ->setId(43)
            ->setCode("ejmdy40o6xi6omk7")
            ->setName("cgf0nn91h0kal53j")
            ->setUnit(68)
            ->setCountryId(null)
            ->setCountryName("v6qrlenakdd8fyuo")
            ->create();
        $this->assertEquals(43, $m->getId());
        $this->assertEquals("ejmdy40o6xi6omk7", $m->getCode());
        $this->assertEquals("cgf0nn91h0kal53j", $m->getName());
        $this->assertEquals(68, $m->getUnit());
        $this->assertEquals(null, $m->getCountryId());
        $this->assertEquals("v6qrlenakdd8fyuo", $m->getCountryName());

    }

    public function testEquals()
    {
        $m = new FiatCurrency(
            42,
            "vnf18zz8074nevtc",
            "7j539uuqhavsuivt",
            75,
            36,
            "chcys94qwtgeahym"
        );

        $me = new FiatCurrency(
            42,
            "vnf18zz8074nevtc",
            "7j539uuqhavsuivt",
            75,
            36,
            "chcys94qwtgeahym"
        );

        $mneId = new FiatCurrency(
            43,
            "vnf18zz8074nevtc",
            "7j539uuqhavsuivt",
            75,
            36,
            "chcys94qwtgeahym"
        );

        $mneCode = new FiatCurrency(
            42,
            "vnf18zz8074nevtc" . "123",
            "7j539uuqhavsuivt",
            75,
            36,
            "chcys94qwtgeahym"
        );

        $mneName = new FiatCurrency(
            42,
            "vnf18zz8074nevtc",
            "7j539uuqhavsuivt" . "123",
            75,
            36,
            "chcys94qwtgeahym"
        );

        $mneUnit = new FiatCurrency(
            42,
            "vnf18zz8074nevtc",
            "7j539uuqhavsuivt",
            76,
            36,
            "chcys94qwtgeahym"
        );

        $mneCountryId = new FiatCurrency(
            42,
            "vnf18zz8074nevtc",
            "7j539uuqhavsuivt",
            75,
            37,
            "chcys94qwtgeahym"
        );

        $mneCountryName = new FiatCurrency(
            42,
            "vnf18zz8074nevtc",
            "7j539uuqhavsuivt",
            75,
            36,
            "chcys94qwtgeahym" . "123"
        );

        $this->assertTrue($m->equals($me));
        $this->assertTrue($me->equals($m));
        $this->assertFalse($m->equals(null));
        $this->assertFalse($m->equals($mneId));
        $this->assertFalse($mneId->equals($m));
        $this->assertFalse($m->equals($mneCode));
        $this->assertFalse($mneCode->equals($m));
        $this->assertFalse($m->equals($mneName));
        $this->assertFalse($mneName->equals($m));
        $this->assertFalse($m->equals($mneUnit));
        $this->assertFalse($mneUnit->equals($m));
        $this->assertFalse($m->equals($mneCountryId));
        $this->assertFalse($mneCountryId->equals($m));
        $this->assertFalse($m->equals($mneCountryName));
        $this->assertFalse($mneCountryName->equals($m));
    }
}
